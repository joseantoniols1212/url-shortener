AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: URL Shortener Backend

Globals:
  Function:
    Timeout: 60
    Runtime: python3.13
    MemorySize: 128

Parameters:
  JwtSecret:
    Type: String
    Description: JWT secret
    Default: secret

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          UrlAuth:
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            FunctionPayloadType: TOKEN
            Identity:
              Header: Authorization
              ReauthorizeEvery: 300

  UrlTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UrlTable
      AttributeDefinitions:
        - AttributeName: shortCode
          AttributeType: S
      KeySchema:
        - AttributeName: shortCode
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/auth/authorizer
      Handler: app.handler
      Description: JWT validator for protected routes
      Environment:
        Variables:
          USER_TABLE_NAME: !Ref UserTable
          JWT_SECRET: !Ref JwtSecret
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserTable

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/auth/login
      Handler: app.handler
      Description: Login user
      Environment:
        Variables:
          USER_TABLE_NAME: !Ref UserTable
          JWT_SECRET: !Ref JwtSecret
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: POST
            Path: /auth/login
            RestApiId: 
              Ref: ApiGatewayApi

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/auth/register
      Handler: app.handler
      Description: Register user
      Environment:
        Variables:
          USER_TABLE_NAME: !Ref UserTable
          JWT_SECRET: !Ref JwtSecret
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: POST
            Path: /auth/register
            RestApiId: 
              Ref: ApiGatewayApi


Outputs:
  ApiUrl:
    Description: "URL base del API Gateway"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"